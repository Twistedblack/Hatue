from flask import Flask, render_template, redirect, url_for, request, flash

app = Flask(__name__)
app.config['SECRET_KEY'] = 'SECRET_KEY'

# Datenbankmodels
# ...

# Routen
@app.route('/')
def home():
    return render_template('home.html')

@app.route('/about')
def about():
    return render_template('about.html')

@app.route('/search', methods=['GET', 'POST'])
def search():
    if request.method == 'POST':
        # Suche in der Datenbank durchführen
    return render_template('search.html')

# API-Endpunkte für Nachrichten
@app.route('/api/content', methods=['GET', 'POST'])
def api_content():
    if request.method == 'GET':
        # Inhalte abrufen
    else:
        # Inhalte speichern

@app.route('/api/content/<string:id>', methods=['PUT', 'DELETE'])
def api_content(id):
    if request.method in ['PUT', 'DELETE']:
        # Inhalte bearbeiten oder löschen

# Routing für das Frontend
@app.route('/<path:path>')
def falls_nicht_gefunden(path):
    return render_template('fehler.html')

if __name__ == '__main__':
    app.run(debug=True)

Dann können wir eine einfache HTML- und CSS-Struktur für die Nutzeroberfläche erstellen:

<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inhaltsseite</title>
    <link rel="stylesheet" href="static/css/main.css">
</head>
<body>
    <header>
        <nav>
            <ul>
                <li><a href="/">Heim</a></li>
                <li><a href="/about">Über uns</a></li>
                <li><a href="/search">Suche</a></li>
            </ul>
        </nav>
    </header>
    <main>
        <!-- Inhalt -->
    </main>
    <footer>
        <!-- Footer -->
    </footer>
    <script src="static/js/main.js"></script>
</body>
</html>
